# Generated by Django 2.0.4 on 2018-05-09 01:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionSwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='功能名称')),
                ('switch', models.BooleanField(default=False, verbose_name='开关')),
            ],
            options={
                'verbose_name_plural': '功能开关',
            },
        ),
        migrations.CreateModel(
            name='AntifraudMiGuan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=64, verbose_name='被查询人姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='被查询人身份证')),
                ('mobile', models.CharField(max_length=64, verbose_name='被查询人手机号')),
                ('data', models.TextField(verbose_name='查询返回数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='查询时间')),
                ('msg', models.CharField(max_length=64, verbose_name='查询结果')),
                ('order_num', models.CharField(default=0, max_length=64, verbose_name='订单号')),
            ],
            options={
                'verbose_name_plural': '蜜罐查询记录',
            },
        ),
        migrations.CreateModel(
            name='EnterpriseExamine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enterprise_name', models.CharField(max_length=32, verbose_name='企业名称')),
                ('corporation_name', models.CharField(default=None, max_length=32, verbose_name='法人姓名')),
                ('organization_code', models.CharField(max_length=64, verbose_name='组织机构代码')),
                ('business_license_img', models.ImageField(upload_to='upload', verbose_name='企业营业执照')),
                ('is_adopt', models.BooleanField(default=False, verbose_name='是否通过')),
                ('is_exam', models.BooleanField(default=False, verbose_name='是否审核')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '企业认证审核表',
            },
        ),
        migrations.CreateModel(
            name='FinanceInvestment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=64, verbose_name='被查询人姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='被查询人身份证')),
                ('data', models.TextField(verbose_name='查询返回数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='查询时间')),
                ('msg', models.CharField(max_length=64, verbose_name='查询结果')),
                ('order_num', models.CharField(default=0, max_length=64, verbose_name='订单号')),
            ],
            options={
                'verbose_name_plural': '个人对外投资查询记录',
            },
        ),
        migrations.CreateModel(
            name='IdCardImgModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=64, verbose_name='被查询人姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='被查询人身份证')),
                ('data', models.TextField(verbose_name='查询返回数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='查询时间')),
                ('msg', models.CharField(max_length=64, verbose_name='查询结果')),
            ],
            options={
                'verbose_name_plural': '身份证返照查询记录',
            },
        ),
        migrations.CreateModel(
            name='IdCardRealNameModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=64, verbose_name='被查询人姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='被查询人身份证')),
                ('data', models.TextField(verbose_name='查询返回数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='查询时间')),
                ('msg', models.CharField(max_length=64, verbose_name='查询结果')),
            ],
            options={
                'verbose_name_plural': '身份证二要素查询记录',
            },
        ),
        migrations.CreateModel(
            name='MinRechargeAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='最低充值金额')),
            ],
            options={
                'verbose_name_plural': '最低充值金额',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='公告标题')),
                ('content', models.TextField(verbose_name='公告内容')),
                ('switch', models.BooleanField(default=True, verbose_name='是否显示')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '公告管理',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goods_name', models.CharField(max_length=64, verbose_name='商品名称')),
                ('price', models.FloatField(verbose_name='充值金额')),
                ('pay_type', models.CharField(max_length=32, verbose_name='充值方式(1=支付宝,2=微信)')),
                ('order_id', models.CharField(max_length=64, verbose_name='订单编号')),
                ('is_success', models.BooleanField(default=False, verbose_name='是否成功')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='下单时间')),
            ],
            options={
                'verbose_name_plural': '订单管理',
            },
        ),
        migrations.CreateModel(
            name='RealNameExamine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=32, verbose_name='真实姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='身份证号')),
                ('pros_id_card_img', models.ImageField(blank=True, default=None, null=True, upload_to='upload', verbose_name='身份证正面照')),
                ('cons_id_card_img', models.ImageField(blank=True, default=None, null=True, upload_to='upload', verbose_name='身份证反面照')),
                ('is_adopt', models.BooleanField(default=False, verbose_name='是否通过')),
                ('is_exam', models.BooleanField(default=False, verbose_name='是否审核')),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': '实名认证审核表',
            },
        ),
        migrations.CreateModel(
            name='RecentSearchRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('date', models.DateField(auto_now_add=True)),
                ('service', models.CharField(max_length=64)),
                ('service_id', models.PositiveIntegerField(blank=True, default=1)),
                ('service_chinese', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name_plural': '近期查询记录',
            },
        ),
        migrations.CreateModel(
            name='RechargeRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='充值金额')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='充值日期')),
            ],
            options={
                'verbose_name_plural': '充值记录',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='角色名称')),
            ],
            options={
                'verbose_name_plural': '角色管理',
            },
        ),
        migrations.CreateModel(
            name='ServiceInterFace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_name', models.CharField(default=None, max_length=32, verbose_name='激活名称')),
                ('service', models.CharField(max_length=32, verbose_name='服务名称')),
                ('url', models.CharField(max_length=64, verbose_name='接口地址')),
            ],
            options={
                'verbose_name_plural': '接口权限管理',
            },
        ),
        migrations.CreateModel(
            name='TelecomRealName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('real_name', models.CharField(max_length=64, verbose_name='被查询人姓名')),
                ('id_card', models.CharField(max_length=64, verbose_name='被查询人身份证')),
                ('mobile', models.CharField(max_length=64, verbose_name='被查询人手机号')),
                ('data', models.TextField(verbose_name='查询返回数据')),
                ('date', models.DateField(auto_now_add=True, verbose_name='查询时间')),
                ('msg', models.CharField(max_length=64, verbose_name='查询结果')),
                ('order_num', models.CharField(default=0, max_length=64, verbose_name='订单号')),
            ],
            options={
                'verbose_name_plural': '运营商三要素查询记录',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=64, verbose_name='手机号')),
                ('password', models.CharField(max_length=32, verbose_name='密码')),
                ('switch', models.BooleanField(default=True, verbose_name='是否激活')),
                ('email', models.EmailField(max_length=254)),
                ('nickname', models.CharField(max_length=32, verbose_name='昵称')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='注册日期')),
                ('score', models.FloatField(default=0, verbose_name='剩余积分')),
                ('session_key', models.CharField(default=None, max_length=64, null=True)),
                ('tel_score', models.FloatField(default=2.4, verbose_name='运营商三要素消耗积分')),
                ('idcard_name_score', models.FloatField(default=3, verbose_name='身份中二要素查询消耗积分')),
                ('idcard_img_score', models.FloatField(default=7, verbose_name='身份证实名核验及返照消耗积分')),
                ('miguan_score', models.FloatField(default=10, verbose_name='蜜罐数据消耗积分')),
                ('invest_score', models.FloatField(default=12, verbose_name='个人对外投资消耗积分')),
                ('real_name', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='真实姓名')),
                ('id_card', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='身份证号')),
                ('pros_id_card_img', models.ImageField(blank=True, default=None, null=True, upload_to='upload', verbose_name='身份证正面照')),
                ('cons_id_card_img', models.ImageField(blank=True, default=None, null=True, upload_to='upload', verbose_name='身份证反面照')),
                ('enterprise_name', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='企业名称')),
                ('corporation_name', models.CharField(blank=True, default=None, max_length=32, null=True, verbose_name='法人姓名')),
                ('organization_code', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='组织机构代码')),
                ('business_license_img', models.ImageField(blank=True, default=None, null=True, upload_to='upload', verbose_name='企业营业执照')),
                ('role', models.ForeignKey(default=1, on_delete=True, to='data_system.Role', verbose_name='角色')),
            ],
            options={
                'verbose_name_plural': '用户管理',
            },
        ),
        migrations.AddField(
            model_name='telecomrealname',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='查询人-手机号'),
        ),
        migrations.AddField(
            model_name='role',
            name='service',
            field=models.ManyToManyField(blank=True, to='data_system.ServiceInterFace', verbose_name='对应权限'),
        ),
        migrations.AddField(
            model_name='rechargerecords',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='用户-电话号码'),
        ),
        migrations.AddField(
            model_name='recentsearchrecord',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo'),
        ),
        migrations.AddField(
            model_name='realnameexamine',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='昵称-手机号'),
        ),
        migrations.AddField(
            model_name='idcardrealnamemodel',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='查询人-手机号'),
        ),
        migrations.AddField(
            model_name='idcardimgmodel',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='查询人-手机号'),
        ),
        migrations.AddField(
            model_name='financeinvestment',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='查询人-手机号'),
        ),
        migrations.AddField(
            model_name='enterpriseexamine',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo'),
        ),
        migrations.AddField(
            model_name='antifraudmiguan',
            name='user',
            field=models.ForeignKey(on_delete=None, to='data_system.UserInfo', verbose_name='查询人-手机号'),
        ),
    ]
